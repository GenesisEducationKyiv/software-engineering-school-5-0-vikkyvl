apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform
  namespace: {{ .Values.namespace }}
  labels:
    app: platform
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: platform
  template:
    metadata:
      labels:
        app: platform
    spec:
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end}}
      containers:
        - name: platform-api-gateway
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "node", "dist/apps/api-gateway/src/main.js" ]
          ports:
            - containerPort: {{ .Values.platformApiGateway.containerPort | default 3000 }}
          env:
            {{- toYaml .Values.platformApiGateway.envs | nindent 12 }}
          resources:
            {{- toYaml .Values.platformApiGateway.resources | nindent 12 }}
          {{- if .Values.secrets.useExternalSecrets }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}

        - name: platform-weather-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "node", "dist/apps/weather-service/src/main.js" ]
          ports:
            - containerPort: {{ .Values.platformWeatherService.containerPort | default 3001 }}
          env:
            {{- toYaml .Values.platformWeatherService.envs | nindent 12 }}
          resources:
            {{- toYaml .Values.platformWeatherService.resources | nindent 12 }}
          {{- if .Values.secrets.useExternalSecrets }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}

        - name: platform-subscription-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "node", "dist/apps/subscription-service/src/main.js" ]
          ports:
            - containerPort: {{ .Values.platformSubscriptionService.containerPort | default 3002 }}
          env:
            {{- toYaml .Values.platformSubscriptionService.envs | nindent 12 }}
          resources:
            {{- toYaml .Values.platformSubscriptionService.resources | nindent 12 }}
          {{- if .Values.secrets.useExternalSecrets }}
          volumeMounts:
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}
      {{- if .Values.secrets.useExternalSecrets }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: platform-secret-store
        {{- end }}