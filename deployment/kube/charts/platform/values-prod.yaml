namespace: platform

replicaCount: 1

serviceAccount:
  create: true
  name: secret-sa
  roleArn: arn:aws:iam::301235908824:role/ragdoll-secrets-csi-sa-role

image:
  repository: 301235908824.dkr.ecr.us-east-1.amazonaws.com/platform
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  portAPIGateway: 80
  portWeatherAPI: 81
  portSubscriptionAPI: 82
  targetPortAPIGateway: 3000
  targetPortWeatherAPI: 3001
  targetPortSubscriptionAPI: 3002

secrets:
  useExternalSecrets: true

platformApiGateway:
  command: [ "node", "dist/apps/api-gateway/src/main.js" ]
  containerPort: 3000
  port: 80
  useExternalSecrets: true
  envs:
    - name: PORT_API_GATEWAY
      value: "3000"
    - name: PORT_WEATHER_SERVICE
      value: "3001"
    - name: PORT_SUBSCRIPTION_SERVICE
      value: "3002"
    - name: WEATHER_API_URL
      value: "http://api.weatherapi.com/v1/current.json"
    - name: OPEN_WEATHER_MAP_URL
      value: "https://api.openweathermap.org/data/2.5/weather"
    - name: WEATHER_STACK_URL
      value: "http://api.weatherstack.com/current"
    - name: BROKER_URL
      value: "amqp://rabbit:rabbit123@rabbitmq.stateful.svc.cluster.local:5672"
    - name: DB_HOST
      value: "postgres.stateful.svc.cluster.local"
    - name: DB_PORT
      value: "5432"
    - name: DB_USER
      value: "postgres"
    - name: DB_NAME
      value: "weather_db"
    - name: REACT_APP_API_URL
      value: "https://platform.mycompany.com"
    - name: WEATHER_API_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_API_KEY
    - name: OPEN_WEATHER_MAP_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: OPEN_WEATHER_MAP_KEY
    - name: WEATHER_STACK_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_STACK_KEY
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: DB_PASSWORD
    - name: EMAIL_USER
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_USER
    - name: EMAIL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_PASSWORD
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

platformWeatherService:
  command: [ "node", "dist/apps/weather-service/src/main.js" ]
  containerPort: 3001
  port: 81
  useExternalSecrets: true
  envs:
    - name: PORT_API_GATEWAY
      value: "3000"
    - name: PORT_WEATHER_SERVICE
      value: "3001"
    - name: PORT_SUBSCRIPTION_SERVICE
      value: "3002"
    - name: WEATHER_API_URL
      value: "http://api.weatherapi.com/v1/current.json"
    - name: OPEN_WEATHER_MAP_URL
      value: "https://api.openweathermap.org/data/2.5/weather"
    - name: WEATHER_STACK_URL
      value: "http://api.weatherstack.com/current"
    - name: BROKER_URL
      value: "amqp://rabbit:rabbit123@rabbitmq.stateful.svc.cluster.local:5672"
    - name: DB_HOST
      value: "postgres.stateful.svc.cluster.local"
    - name: DB_PORT
      value: "5432"
    - name: DB_USER
      value: "postgres"
    - name: DB_NAME
      value: "weather_db"
    - name: REACT_APP_API_URL
      value: "https://platform.mycompany.com"
    - name: WEATHER_API_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_API_KEY
    - name: OPEN_WEATHER_MAP_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: OPEN_WEATHER_MAP_KEY
    - name: WEATHER_STACK_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_STACK_KEY
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: DB_PASSWORD
    - name: EMAIL_USER
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_USER
    - name: EMAIL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_PASSWORD
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

platformSubscriptionService:
  command: [ "node", "dist/apps/subscription-service/src/main.js" ]
  containerPort: 3002
  port: 82
  useExternalSecrets: true
  envs:
    - name: PORT_API_GATEWAY
      value: "3000"
    - name: PORT_WEATHER_SERVICE
      value: "3001"
    - name: PORT_SUBSCRIPTION_SERVICE
      value: "3002"
    - name: WEATHER_API_URL
      value: "http://api.weatherapi.com/v1/current.json"
    - name: OPEN_WEATHER_MAP_URL
      value: "https://api.openweathermap.org/data/2.5/weather"
    - name: WEATHER_STACK_URL
      value: "http://api.weatherstack.com/current"
    - name: BROKER_URL
      value: "amqp://rabbit:rabbit123@rabbitmq.stateful.svc.cluster.local:5672"
    - name: DB_HOST
      value: "postgres.stateful.svc.cluster.local"
    - name: DB_PORT
      value: "5432"
    - name: DB_USER
      value: "postgres"
    - name: DB_NAME
      value: "weather_db"
    - name: REACT_APP_API_URL
      value: "https://platform.mycompany.com"
    - name: WEATHER_API_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_API_KEY
    - name: OPEN_WEATHER_MAP_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: OPEN_WEATHER_MAP_KEY
    - name: WEATHER_STACK_KEY
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: WEATHER_STACK_KEY
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: DB_PASSWORD
    - name: EMAIL_USER
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_USER
    - name: EMAIL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: platform-secret-store
          key: EMAIL_PASSWORD
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

ingress:
  enabled: true
  host: platform.ainp.valmark.dev
  className: alb
  path: /
