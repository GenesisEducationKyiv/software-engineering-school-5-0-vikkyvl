apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: {{ .Values.namespace }}
  labels:
    app: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      {{- if .Values.serviceAccount }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end}}
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            {{- toYaml .Values.rabbitmq.envs | nindent 10 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
            {{- if .Values.rabbitmq.useExternalSecrets }}
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
          {{- with .Values.rabbitmq.livenessProbe }}
          livenessProbe:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.rabbitmq.readinessProbe }}
          readinessProbe:
            {{ toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.rabbitmq.useExternalSecrets }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: rabbitmq-secrets-store
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.rabbitmq.storageSize }}
        {{- if .Values.rabbitmq.storageClass }}
        storageClassName: {{ .Values.rabbitmq.storageClass }}
        {{- end }}
